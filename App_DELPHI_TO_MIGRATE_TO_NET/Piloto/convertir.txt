procedure ConvertToJPEG( Image: TImage );
var
   Jpeg, JpegTemp: TJpegImage;
   nMaxWidth: integer;

   procedure ResizeJpeg( srcJpeg, destJpeg: TJpegImage; const MaxSize: integer );
   var
       Bitmap: TBitmap;
       Ratio: double;
   begin

       {Si l'image est vide ou la largeur est nulle, sortir}
       if (srcJpeg.Empty) or (MaxSize <= 0) then
          Exit;

       { Création d'un TBitmap le temps de redimensionner l'image }
       Bitmap := TBitmap.Create;
       try
           { Détermination du cadrage Vertical ou horizontal}
           Ratio := srcJpeg.Height / srcJpeg.Width;

           if Ratio > 1 then
           begin
              //Cadrage vertical
              Bitmap.Width := Round(MaxSize / Ratio);

              // 19jun2008
              if Bitmap.Width > Image.Picture.Bitmap.Width then
                 Bitmap.Width := Image.Picture.Bitmap.Width;
           end
           else
              //cadrage horizontal
              Bitmap.Width := MaxSize;

           Bitmap.Height := Round(Bitmap.Width * Ratio);

           //Copie de l'image avec redimensionnement sur le canvas du TBitmap
           Bitmap.Canvas.StretchDraw(Bitmap.Canvas.ClipRect, srcJpeg);

           {Il ne reste plus qu'à copier l'image redimensionnée dan le Jpeg à retourner}
           destJpeg.Assign(Bitmap);

       finally
           Bitmap.Free;

       end;
   end;


begin

   if Image.Picture <> nil then
   begin
      JpegTemp := TJpegImage.Create;

      try
         Jpeg := TJpegImage.Create;

         try
             // cargar la imagen
             try
                Jpeg.Assign( Image.Picture );
             except
                Jpeg.Assign( Image.Picture.Bitmap );
             end;

             if JPEG_Quality = 2 then
             begin
                nMaxWidth := 250;
                Jpeg.CompressionQuality := 90;  //
             end
             else if JPEG_Quality = 5 then
             begin
                nMaxWidth := 350;
                Jpeg.CompressionQuality := 60;
             end
             else if JPEG_Quality = 10 then
             begin
                nMaxWidth := 450;
                Jpeg.CompressionQuality := 10;
             end;

             // redimensionarla
             ResizeJpeg( Jpeg, JpegTemp, nMaxWidth );

             // l'affecter au contrôle visuel
             Image.Picture.Assign(JpegTemp);
             Image.Update;
             Application.ProcessMessages;

         finally
             Jpeg.Free;
         end;

      finally
         JpegTemp.Free;

      end;

   end;

end;
